local Players = game:GetService("Players")
local player = Players.LocalPlayer


local oldNamecall
local oldIndex
local oldNewIndex


local anticheat = game:GetService("ReplicatedStorage").Remote_Functions.General.Exploit_Check
local autoDie = game:GetService("ReplicatedStorage"):WaitForChild("AutoDie2")


local spoofedValues = {
    WalkSpeed = 16,
    JumpPower = 50,
    Gravity = workspace.Gravity
}


task.spawn(function()
    while task.wait(0.5) do
        if anticheat then
            anticheat:InvokeServer("Activity", true)
        end
    end
end)


oldNamecall = hookmetamethod(game, "__namecall", newcclosure(function(self, ...)
    local method = getnamecallmethod()
    local args = {...}
    
    if self == anticheat and method == "InvokeServer" then
        if args[1] == "Record_Kick_Reason" or
           args[1] == "WalkSpeed" or
           args[1] == "JumpPower" or
           args[1] == "Gravity" or
           args[1] == "Teleport" or
           args[1] == "Activity" or
           args[1] == "Exploit_Defense_Loaded" or
           args[1] == "BodyVelocity" then
            return true
        end
    elseif self == autoDie and method == "FireServer" then
        return nil
    end
    
    return oldNamecall(self, ...)
end))


oldIndex = hookmetamethod(game, "__index", newcclosure(function(self, key)
    if not checkcaller() and typeof(self) == "Instance" then
        if self:IsA("Humanoid") then
            if key == "WalkSpeed" then
                return spoofedValues.WalkSpeed
            elseif key == "JumpPower" then
                return spoofedValues.JumpPower
            elseif key == "Health" then
                return self.MaxHealth
            end
        elseif self == workspace and key == "Gravity" then
            return spoofedValues.Gravity
        end
    end
    
    return oldIndex(self, key)
end))


oldNewIndex = hookmetamethod(game, "__newindex", newcclosure(function(self, key, value)
    if not checkcaller() and typeof(self) == "Instance" then
        if self:IsA("Humanoid") then
            if key == "WalkSpeed" then
                spoofedValues.WalkSpeed = value
                return
            elseif key == "JumpPower" then
                spoofedValues.JumpPower = value
                return
            elseif key == "Health" then
                return
            end
        elseif self == workspace and key == "Gravity" then
            spoofedValues.Gravity = value
            return
        end
    end
    
    return oldNewIndex(self, key, value)
end))


local function protectCharacter(char)
    if not char then return end
    
    local characterData = char:WaitForChild("Character Data", 10)
    if characterData then
        local exploitDefense = characterData:WaitForChild("Exploit_Defense")
        exploitDefense.Value = true
        if anticheat then
            anticheat:InvokeServer("Exploit_Defense_Loaded", true)
        end
    end
    
    local humanoid = char:WaitForChild("Humanoid")
    humanoid:GetPropertyChangedSignal("Health"):Connect(function()
        if humanoid.Health < humanoid.MaxHealth then
            humanoid.Health = humanoid.MaxHealth
        end
    end)
end


player.CharacterAdded:Connect(protectCharacter)
if player.Character then
    protectCharacter(player.Character)
end
